<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphics on PeakFin.386</title>
    <link>https://peakfin.github.io/categories/graphics/</link>
    <description>Recent content in Graphics on PeakFin.386</description>
    <generator>Hugo</generator>
    <language>kr</language>
    <lastBuildDate>Fri, 02 Aug 2024 09:15:48 +0900</lastBuildDate>
    <atom:link href="https://peakfin.github.io/categories/graphics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>머릿말</title>
      <link>https://peakfin.github.io/posts/cc&#43;&#43;/preface/</link>
      <pubDate>Tue, 30 Jul 2024 11:15:48 +0900</pubDate>
      <guid>https://peakfin.github.io/posts/cc&#43;&#43;/preface/</guid>
      <description>게임 프로그래머로써 기본적인 그래픽스에 관한 노하우를 글로 정리해 보고자 한다.&#xA;대부분 짧은 글의 형식이 될 것 같은데 종종 예제를 만들거나 코드가 추가될수도&amp;hellip;.&#xA;솔찍히 내가 딱히 기술적으로 뛰어난 개발자도 아니고 순수하게 혼자 생각을 정리하기 위한 시리즈의 글을 작성할 예정이기에 혹시라도 이 글을 보고 교정이 필요한 부분을 찾거나 하고 싶은 이야기가 있으신 분들은 블로그 하단의 메일 주소로 메일을 보내주시면 감사하겠습니다.</description>
    </item>
    <item>
      <title>머릿말</title>
      <link>https://peakfin.github.io/posts/graphics/preface/</link>
      <pubDate>Tue, 30 Jul 2024 11:15:48 +0900</pubDate>
      <guid>https://peakfin.github.io/posts/graphics/preface/</guid>
      <description>게임 프로그래머로써 기본적인 그래픽스에 관한 노하우를 글로 정리해 보고자 한다.&#xA;대부분 짧은 글의 형식이 될 것 같은데 종종 예제를 만들거나 코드가 추가될수도&amp;hellip;.&#xA;솔찍히 내가 딱히 기술적으로 뛰어난 개발자도 아니고 순수하게 혼자 생각을 정리하기 위한 시리즈의 글을 작성할 예정이기에 혹시라도 이 글을 보고 교정이 필요한 부분을 찾거나 하고 싶은 이야기가 있으신 분들은 블로그 하단의 메일 주소로 메일을 보내주시면 감사하겠습니다.</description>
    </item>
    <item>
      <title>그래픽스 노하우 1.삼각형</title>
      <link>https://peakfin.github.io/posts/graphics/triangle/</link>
      <pubDate>Tue, 30 Jul 2024 12:15:48 +0900</pubDate>
      <guid>https://peakfin.github.io/posts/graphics/triangle/</guid>
      <description>삼각형은 일직선 위에 놓여있지 않은 3개의 점과 선분으로 이루어진 다각형으로 평면 상에서 가장 단순한 모양의 다각형이다.&#xA;우리가 보는 게임의 화면은 논리적으로는 3차원 공간 일수 있지만 물리적으로는 결국 평면이다. 이는 화면에 그릴 요소들을 가장 단순한 모양으로 쪼개면 삼각형 단위로 만들 수 있다는 것이다.&#xA;게임 화면은 결국 삼각형을 연속으로 그리고 있을 뿐이다. 기계적으로 깊이 들어가면 이야기가 달라지지만 게임 프로그래머로써는 일단 이 정도 이해로 충분하다고 생각한다.&#xA;openGL, openGL es, Direct x, Metal, Vulkan 에서도 모두 마찬가지라고 생각하면 된다.</description>
    </item>
    <item>
      <title>그래픽스 노하우 1-1.삼각형의 안을 채우는 방식, 파이프라인에 대한 감상</title>
      <link>https://peakfin.github.io/posts/graphics/triangle_1/</link>
      <pubDate>Fri, 02 Aug 2024 09:15:48 +0900</pubDate>
      <guid>https://peakfin.github.io/posts/graphics/triangle_1/</guid>
      <description>간략하게 각 Graphics API에서 픽셀의 최종 색을 결정하는 방법을 소개하고 파이프라인에 대한 이야기를 살짝 해보고자 한다.&#xA;개인적으로 실무에서 써본 Graphics API는 openGL, openGL es, Metal이고 DirectX와 Vulkan은 실무에서 사용해 보지는 못하고 학습만 해봤다.&#xA;각 API들은 GPU에서 그래픽을 그리는 과정의 단계들을 파이프라인으로 정의해 사용 중이고 이 파이프라인은 입력된 데이터가 화면에 그려지기까지의 순서를 규정한다. 각 단계에서는 다양한 셰이더 프로그램을 통해 개발자가 관여할 수 있다는 공통점이 있지만 어떤 API를 사용하는지와 버전에 따라 사용 가능한 셰이더의 종류와 개수는 차이가 있다.</description>
    </item>
  </channel>
</rss>
