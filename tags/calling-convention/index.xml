<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Calling Convention on PeakFin.386</title>
    <link>https://peakfin.github.io/tags/calling-convention/</link>
    <description>Recent content in Calling Convention on PeakFin.386</description>
    <generator>Hugo</generator>
    <language>kr</language>
    <lastBuildDate>Tue, 20 Aug 2024 05:08:46 +0900</lastBuildDate>
    <atom:link href="https://peakfin.github.io/tags/calling-convention/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>c,c&#43;&#43; 이야기 1.호출규약</title>
      <link>https://peakfin.github.io/posts/cc&#43;&#43;/calling_convention/</link>
      <pubDate>Tue, 20 Aug 2024 05:08:46 +0900</pubDate>
      <guid>https://peakfin.github.io/posts/cc&#43;&#43;/calling_convention/</guid>
      <description>이 글에서는 호출 규약에 대한 대략적인 내용과 나의 견해를 남기고자 한다.&#xA;호출 규약이란 C에서 함수를 사용할 때 함수를 호출하는 입장과 호출 받는 입장에서의 데이터 전달 방식과 스택 사용 방식에 대한 규칙이라고 할 수 있다. 주로 매개변수가 스택에 푸시되는 순서와 스택을 정리하는 주체가 누구인가, 리턴 값을 어떤 레지스터에 담을 것인가, 함수 호출 시 어떤 레지스터를 유지할 것인가를 규정한다. 이를 정하는 이유는 모든 개발자가 C로 개발을 할 때 인간의 관점에서 이해하기 쉬운 코드를 만들기 위해 함수를 사용하게 되는데 이 함수가 기계에서 돌아갈 때 동작하는 규칙을 정해야 효율적으로 사용이 가능하기 때문이다.</description>
    </item>
  </channel>
</rss>
